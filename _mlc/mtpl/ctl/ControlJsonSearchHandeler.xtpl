<?php
abstract class <%= strtoupper(MLC_APPLICATION_PREFIX); %>JsonSearchDriverHandeler{

    public static function GetExtension(){
        if(array_key_exists('mjax-route-ext', $_GET)){
            return $_GET['mjax-route-ext'];
        }
        return pathinfo($_SERVER['REQUEST_URI'], PATHINFO_EXTENSION);
    }
    public static function Run(){
         if(array_key_exists('search', $_POST)){
            $strSearch = $_POST['search'];
         }else{
            $strSearch = '';
         }
         if(array_key_exists('entity', $_POST)){
            $strEntity = $_POST['entity'];
            $strField = null;
            if(
                (array_key_exists('entity_field', $_POST)) &&
                (strlen( $_POST['entity_field']) > 0)
            ){
                $strField = $_POST['entity_field'];
            }
         }else{
             $arrParts = explode('_', self::GetExtension());
             $strEntity = $arrParts[0];
             if(count($arrParts) == 2){
                $strField = $arrParts[1];
             }else{
                $strField = null;
             }
         }
         $objSearchDriver = MLCApplication::$objRewriteHandeler->EntityManager;
         if(is_null($objSearchDriver)){
            $objSearchDriver = new <%= strtoupper(MLC_APPLICATION_PREFIX); %>EntityManager();
         }
        $objSearchDriver->Populate();
         switch($strEntity){
           <% foreach ($data as $arrTable){ %>
                case('<%= MLCTemplateDriver::Capatilize($arrTable['name']); %>'):
                case('<%= strtolower($arrTable['name']); %>'):
                    $arrEntities = $objSearchDriver->Search<%= MLCTemplateDriver::Capatilize($arrTable['name']); %>($strSearch, $strField);
                    self::RenderJsonResponse($arrEntities, $strField);
                break;
           <% } %>
           default:
           die(json_encode(array('error'=>'Not a valid searchable entity: ' . $strEntity)));
         }
    }
    public static function RenderJsonResponse($arrEntities, $strField = null){
        $arrData = array();

        foreach($arrEntities as $objEntity){
            if(is_null($strField)){
                $strText = $objEntity->__toString();
            }else{
                $strText = $objEntity->__get($strField);
            }
            $arrData[] = array(
                'text' => $strText,
                'value' => get_class($objEntity) . '_' . $objEntity->GetId()
            );
        }
        die(json_encode($arrData));
    }
}
<%= strtoupper(MLC_APPLICATION_PREFIX); %>JsonSearchDriverHandeler::Run();
<?php
class <%= MLCTemplateDriver::Capatilize($name); %>ManageFormBase extends FFSForm{
    public $lst<%= MLCTemplateDriver::Capatilize($name); %>s = null;
    public $pnlEdit = null;
    public $pnlSelect = null;
    public function Form_Create(){
        parent::Form_Create();
        $this->blnSkipMainWindowRender = true;

    }
   public function Query(){
        $arrAndConditions = array();
         <% foreach ($fields as $objField) { %>
            <% if (($objField['is_pkey']) || (array_key_exists('reference', $objField))) { %>
                $int<%=  MLCTemplateDriver::Capatilize($objField['name']); %> = MLCApplication::QS(<%= strtoupper(MLC_APPLICATION_PREFIX); %>QS::<%= $Name; %>_<%= MLCTemplateDriver::Capatilize($objField['name']); %>);
                if(!is_null($int<%=  MLCTemplateDriver::Capatilize($objField['name']); %>)){
                    $arrAndConditions[] = sprintf(
                        '<%= $full_name; %>.<%= $objField['name']; %> = %s',
                        $int<%=  MLCTemplateDriver::Capatilize($objField['name']); %>
                    );
                }
            <% } %>
            <% if (_mlc_is_special_field($objField['type'],'varchar*')) { %>
                  $str<%=  MLCTemplateDriver::Capatilize($objField['name']); %> = MLCApplication::QS(<%= strtoupper(MLC_APPLICATION_PREFIX); %>QS::<%= $Name; %>_<%= MLCTemplateDriver::Capatilize($objField['name']); %>);
                  if(!is_null($str<%=  MLCTemplateDriver::Capatilize($objField['name']); %>)){
                      $arrAndConditions[] = sprintf(
                          '<%= $full_name; %>.<%= $objField['name']; %> LIKE "%s%%"',
                          $str<%=  MLCTemplateDriver::Capatilize($objField['name']); %>
                      );
                  }
              <% } %>
        <% } %>
        if(count($arrAndConditions) >= 1){

            $arr<%= MLCTemplateDriver::Capatilize($name); %>s = <%= MLCTemplateDriver::Capatilize($name); %>::Query(
                'WHERE ' . implode(' AND ', $arrAndConditions)
            );
        }else{
            $arr<%= MLCTemplateDriver::Capatilize($name); %>s = array();
        }

        return $arr<%= MLCTemplateDriver::Capatilize($name); %>s;
    }

    public function InitSelectPanel(){
        $this->pnlSelect = new <%= MLCTemplateDriver::Capatilize($name); %>SelectPanel($this);

        $this->pnlSelect->AddAction(
            new MJaxBSAutocompleteSelectEvent(),
            new MJaxServerControlAction($this, 'pnlSelect_change')
        );

        $wgt<%= MLCTemplateDriver::Capatilize($name); %> = $this->AddWidget(
            'Select <%= MLCTemplateDriver::Capatilize($name); %>',
            'icon-select',
            $this->pnlSelect
        );
        $wgt<%= MLCTemplateDriver::Capatilize($name); %>->AddCssClass('span6');
        return $wgt<%= MLCTemplateDriver::Capatilize($name); %>;
    }
    public function pnlSelect_change($strFormId, $strControlId, $mixActionParameter){
        $arr<%= MLCTemplateDriver::Capatilize($name); %>s = $this->pnlSelect->GetValue();
        if(count($arr<%= MLCTemplateDriver::Capatilize($name); %>s) == 1){

            $this->pnlEdit->Set<%= MLCTemplateDriver::Capatilize($name); %>(
                $arr<%= MLCTemplateDriver::Capatilize($name); %>s[0]
            );
            foreach($this->lst<%= MLCTemplateDriver::Capatilize($name); %>s as $objRow){
                if($objRow->ActionParameter == $arr<%= MLCTemplateDriver::Capatilize($name); %>s[0]-><%= MLCTemplateDriver::Capatilize($pkey_field['name']); %>){
                    $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->SelectedRow = $objRow;
                }
            }
            //$this->ScrollTo($this->pnlEdit);

        }//else{
            $this->ScrollTo($this->lst<%= MLCTemplateDriver::Capatilize($name); %>s);
        //}
        $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->RemoveAllChildControls();
        $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->SetDataEntites($arr<%= MLCTemplateDriver::Capatilize($name); %>s);
        //TODO: Remeber to add check lists for assoc or relationship tables


    }
    public function InitEditPanel($obj<%= MLCTemplateDriver::Capatilize($name); %> = null){
        $this->pnlEdit = new <%= MLCTemplateDriver::Capatilize($name); %>EditPanel($this, $obj<%= MLCTemplateDriver::Capatilize($name); %>);

        $this->pnlEdit->AddAction(
            new MJaxDataEntitySaveEvent(),
            new MJaxServerControlAction($this, 'pnlEdit_save')
        );
        $this->pnlEdit->AddAction(
            new MJaxDataEntityDeleteEvent(),
            new MJaxServerControlAction($this, 'pnlEdit_delete')
        );

        $wgt<%= MLCTemplateDriver::Capatilize($name); %> = $this->AddWidget(
            ((is_null($obj<%= MLCTemplateDriver::Capatilize($name); %>))?'Create <%= MLCTemplateDriver::Capatilize($name); %>':'Edit <%= MLCTemplateDriver::Capatilize($name); %>'),
            'icon-edit',
            $this->pnlEdit
        );
        $wgt<%= MLCTemplateDriver::Capatilize($name); %>->AddCssClass('span6');
        return $wgt<%= MLCTemplateDriver::Capatilize($name); %>;
    }
    public function pnlEdit_save($strFormId, $strControlId, $obj<%= $Name; %>)
    {
        $pnlRow = $this->UpdateTable($obj<%= $Name; %>);

        $this->ScrollTo($pnlRow);

        $this->pnlEdit->Set<%= $Name; %>(null);
    }
    public function pnlEdit_delete($strFormId, $strControlId, $obj<%= $Name; %>)
    {
        $this->lst<%= $Name; %>s->SelectedRow->Remove();
        $this->lst<%= $Name; %>s->SelectedRow = null;
    }
    public function InitList($arr<%= $Name; %>s){
        $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s = new <%= MLCTemplateDriver::Capatilize($name); %>ListPanel($this, $arr<%= MLCTemplateDriver::Capatilize($name); %>s);

        $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->AddAction(
            new MJaxTableEditInitEvent(),
            new MJaxServerControlAction($this, 'lst<%= MLCTemplateDriver::Capatilize($name); %>_editInit')
        );
        $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->AddAction(
            new MJaxTableEditSaveEvent(),
            new MJaxServerControlAction($this, 'lst<%= MLCTemplateDriver::Capatilize($name); %>_editSave')
        );

        if ($this->blnInlineEdit) {
            $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->InitRemoveButtons();
            $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->InitEditControls();
            $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->AddEmptyRow();
        } else {
            $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->InitRowControl(
                'edit',
                'Edit',
                $this,
                'lnkEdit_click'
            );
        }
        //







        $wgt<%= MLCTemplateDriver::Capatilize($name); %> = $this->AddWidget(
            '<%= MLCTemplateDriver::Capatilize($name); %>s',
            'icon-ul',
            $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s
        );
        $wgt<%= MLCTemplateDriver::Capatilize($name); %>->AddCssClass('span12');
        return $wgt<%= MLCTemplateDriver::Capatilize($name); %>;

    }


    public function lst<%= MLCTemplateDriver::Capatilize($name); %>_editInit(){
        //_dv($this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->SelectedRow);
    }
    public function lst<%= MLCTemplateDriver::Capatilize($name); %>_editSave(){
        $obj<%= MLCTemplateDriver::Capatilize($name); %> = <%= MLCTemplateDriver::Capatilize($name); %>::LoadById($this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->SelectedRow->ActionParameter);
        if(is_null($obj<%= MLCTemplateDriver::Capatilize($name); %>)){
            $obj<%= MLCTemplateDriver::Capatilize($name); %> = new <%= MLCTemplateDriver::Capatilize($name); %>();
        }
        $obj<%= MLCTemplateDriver::Capatilize($name); %>->IdCompetition = FFSForm::$objCompetition->IdCompetition;
        $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->SelectedRow->UpdateEntity(
            $obj<%= MLCTemplateDriver::Capatilize($name); %>
        );
    }

        public function lnkEdit_click($strFormId, $strControlId, $strActionParameter){
            $this->pnlEdit->Set<%= MLCTemplateDriver::Capatilize($name); %>(
                <%= MLCTemplateDriver::Capatilize($name); %>::LoadById($strActionParameter)
            );
            $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->SelectedRow = $this->arrControls[$strControlId]->ParentControl;
            $this->ScrollTo($this->pnlEdit);
        }

        public function UpdateTable($obj<%= MLCTemplateDriver::Capatilize($name); %>){

            //_dv($obj<%= MLCTemplateDriver::Capatilize($name); %>);

            if(!is_null($this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->SelectedRow)){
                 //This already exists
                 $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->SelectedRow->UpdateEntity(
                     $obj<%= MLCTemplateDriver::Capatilize($name); %>
                 );
                 $objRow = $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->SelectedRow;
                 $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->SelectedRow = null;
            }else{

                $objRow = $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->AddRow(
                    $obj<%= MLCTemplateDriver::Capatilize($name); %>
                );


            }
            $this->lst<%= MLCTemplateDriver::Capatilize($name); %>s->RefreshControls();
            return $objRow;
        }


}

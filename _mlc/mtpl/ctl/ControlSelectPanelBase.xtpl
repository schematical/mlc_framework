<?php
class <%= MLCTemplateDriver::Capatilize($name); %>SelectPanelBase extends MJaxPanel{
    protected $blnDisplayAdvOptions = false;
    protected $arrSelected<%= $Name; %>s = array();

    public $txtSearch = null;
    //public $tbl<%= MLCTemplateDriver::Capatilize($name); %>s = null;
    <% foreach ($fields as $objField) { %>
       	<% if (!$objField['is_pkey']){ %>
       	    <% if (!(_mlc_is_special_field($objField['name'],'*Date'))){ %>
       	        public $<%= $objField['varName']; %> = null;
       	    <% } %>
            <% if ((_mlc_is_special_field($objField['name'],'*Date')) && ($objField['name'] != 'creDate')){ %>

                public $txt<%= MLCTemplateDriver::Capatilize($objField['name']); %>_StartDate = null;
                public $txt<%= MLCTemplateDriver::Capatilize($objField['name']); %>_EndDate = null;

            <% } %>
        <% } %>
       	<% if ($objField['is_pkey']){ %>
        	public $<%= $objField['varName']; %> = null;
        <% } %>
   	<% } %>
    public function __construct($objParentControl, $strControlId = null){
        parent::__construct($objParentControl, $strControlId);
        $this->strTemplate = __VIEW_ACTIVE_APP_DIR__ . '/www/ctl_panels/' . get_class($this) . '.tpl.php';
        $this->txtSearch = new MJaxBSAutocompleteTextBox(
            $this,
            '/data/search?mjax-route-ext=<%= $name; %>'
        );


        $this->txtSearch->Name = 'id<%= MLCTemplateDriver::Capatilize($name); %>';
        $this->txtSearch->AddCssClass('input-large');
        $this->txtSearch->AddAction(
            new MJaxChangeEvent(),
            new MJaxServerControlAction($this, 'txtSearch_change')
        );


        <% foreach ($fields as $objField) { %>

            <% if (!(_mlc_is_special_field($objField['name'],'*Date'))){ %>
                $this-><%= $objField['varName']; %> = new MJaxTextBox($this);
                $this-><%= $objField['varName']; %>->Attr('placeholder', "<%= _mlc_split($objField['name']); %>");
            <% } %>
            <% if ((_mlc_is_special_field($objField['name'],'*Date')) && ($objField['name'] != 'creDate')){ %>

                $this->txt<%= MLCTemplateDriver::Capatilize($objField['name']); %>_StartDate = new MJaxBSDateTimePicker($this);
                $this->txt<%= MLCTemplateDriver::Capatilize($objField['name']); %>_StartDate->DateOnly();
                $this->txt<%= MLCTemplateDriver::Capatilize($objField['name']); %>_EndDate = new MJaxBSDateTimePicker($this);
                $this->txt<%= MLCTemplateDriver::Capatilize($objField['name']); %>_EndDate->DateOnly();
            <% } %>

        <% } %>


    }

    public function txtSearch_change(){
        $objEntity = null;

        $arrParts = explode('_', $this->txtSearch->Value);
        if(count($arrParts) < 2){
            //IDK
            $this->arrSelected<%= MLCTemplateDriver::Capatilize($name); %>s = array();
            return;
        }
        try{
            if(class_exists($arrParts[0])){
                $objEntity = call_user_func(
                    $arrParts[0] . '::LoadById',
                    $arrParts[1]
                );
            }
        }catch(Exception $e){
            error_log($e->getMessage());
        }
        $arr<%= MLCTemplateDriver::Capatilize($name); %>s = array();
        if(is_null($objEntity)){
            return $arr<%= MLCTemplateDriver::Capatilize($name); %>s;
        }
        switch(get_class($objEntity)){
            case('<%= MLCTemplateDriver::Capatilize($name); %>'):
                $arr<%= MLCTemplateDriver::Capatilize($name); %>s = array($objEntity);
            break;
            <% foreach ($parent_fields as $objField){ %>
            case('<%= MLCTemplateDriver::Capatilize($objField['reference']['table']); %>'):
                $arrAndConditions = $this->GetExtQuery();
                $arrAndConditions[] = sprintf(
                    ' <%= $objField['reference']['name']; %> = %s',
                    $objEntity-><%= MLCTemplateDriver::Capatilize($objField['reference']['name']); %>
                );
                $arr<%= MLCTemplateDriver::Capatilize($name); %>s = <%= MLCTemplateDriver::Capatilize($name); %>::Query(
                    ' WHERE ' . implode(' AND ', $arrAndConditions)
                );
            break;
            <% } %>
            default:array();
                throw new Exception("Invalid entity type: " . get_class($objEntity));
        }


        $this->arrSelected<%= MLCTemplateDriver::Capatilize($name); %>s = $arr<%= MLCTemplateDriver::Capatilize($name); %>s;
        $this->TriggerEvent(
            'mjax-bs-autocomplete-select'
        );
    }
    public function GetExtQuery(){
        $arrAndConditions = array();
        <% foreach ($fields as $objField) { %>

        	<% if (!$objField['is_pkey']){ %>
                <% if ((!_mlc_is_special_field($objField['name'])) && (!array_key_exists('reference', $objField))){ %>
                    if(!is_null($this-><%= $objField['varName']; %>->GetValue())){
                        $arrAndConditions[] = sprintf(
                            '<%= $objField['name']; %> LIKE "%s%%"',
                            $this-><%= $objField['varName']; %>->GetValue()
                        );
                    }
                <% } %>

                <% if (_mlc_is_special_field($objField['name'])){ %>
                    //Is special field!!!!!
                    <% if ($objField['name'] == 'creDate'){ %>
                        //Do nothing this is a creDate
                    <% } %>
                    <% if ((_mlc_is_special_field($objField['name'],'*Date')) && ($objField['name'] != 'creDate')){ %>
                        if(!is_null($this->txt<%= MLCTemplateDriver::Capatilize($objField['name']); %>_StartDate->GetValue())){
                            if(is_null($this->txt<%= MLCTemplateDriver::Capatilize($objField['name']); %>_EndDate->GetValue())){
                                $this->txt<%= MLCTemplateDriver::Capatilize($objField['name']); %>_StartDate->Alert("Must have an end date to perform this function");

                            }else{
                                $arrAndConditions[] = sprintf(
                                    '(<%= $objField['name']; %> > "%s" AND <%= $objField['name']; %> < "%s")',
                                    $this->txt<%= MLCTemplateDriver::Capatilize($objField['name']); %>_StartDate->GetValue(),
                                    $this->txt<%= MLCTemplateDriver::Capatilize($objField['name']); %>_EndDate->GetValue()
                                );
                            }
                        }
                    <% } %>
                <% } %>
            <% } %>

        <% } %>



        return $arrAndConditions;
    }
    public function GetValue(){
        return $this->arrSelected<%= $Name; %>s;
    }
     /////////////////////////
        // Public Properties: GET
        /////////////////////////
        public function __get($strName)
        {
            switch ($strName) {
                case "DisplayAdvOptions":
                    return $this->blnDisplayAdvOptions;

                default:
                    return parent::__get($strName);
                //throw new Exception("Not porperty exists with name '" . $strName . "' in class " . __CLASS__);
            }
        }

        /////////////////////////
        // Public Properties: SET
        /////////////////////////
        public function __set($strName, $mixValue)
        {
            switch ($strName) {

                case "DisplayAdvOptions":
                    return $this->blnDisplayAdvOptions = $mixValue;
                default:
                    return parent::__set($strName, $mixValue);
                //throw new Exception("Not porperty exists with name '" . $strName . "' in class " . __CLASS__);
            }
        }


}